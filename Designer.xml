<project>
    <shortName>Designer</shortName>
    <fullName>Shure Designer</fullName>
    <version>999.0.0.0</version>
    <installerFilename>Shure${product_shortname}_${product_version}_${InstallPackagePlatform}_InstallBuilder.${platform_exec_suffix}</installerFilename>
    <debugLevel>4</debugLevel>
    <componentList>
        <component>
            <name>Designer</name>
            <description>Designer</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>win-x64</description>
                    <destination>${system_temp_directory}</destination>
                    <name>winx64</name>
                    <platforms>windows-x64</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>win-x64/${FileExecutable}</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>win-x64/${VCRuntimeExecutable}</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>icon/dng-app-icon-64.ico</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>mac-x64</description>
                    <destination>${installdir}</destination>
                    <name>macx64</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>mac-x64/Shure Designer Desktop.app</origin>
                        </distributionFile>
                    </distributionFileList>
                    <shouldPackRuleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${InstallPackagePlatform}</text>
                            <value>Mac-arm64</value>
                        </compareText>
                    </shouldPackRuleList>
                </folder>
                <folder>
                    <description>mac-arm64</description>
                    <destination>${installdir}</destination>
                    <name>macarm64</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>mac-arm64/Shure Designer Desktop.app</origin>
                        </distributionFile>
                    </distributionFileList>
                    <shouldPackRuleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${InstallPackagePlatform}</text>
                            <value>Mac-x64</value>
                        </compareText>
                    </shouldPackRuleList>
                </folder>
            </folderList>
        </component>
    </componentList>
    <preBuildActionList>
        <setInstallerVariable>
            <name>InstallPackagePlatform</name>
            <value>Win-x64</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows-x64</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>InstallPackagePlatform</name>
            <value>Mac-x64</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${project.osxplatforms}</value1>
                    <value2>osx-x86_64</value2>
                </compareValues>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable>
            <name>InstallPackagePlatform</name>
            <value>Mac-arm64</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${project.osxplatforms}</value1>
                    <value2>osx-arm64</value2>
                </compareValues>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <text>InstallPackagePlatform set to ${InstallPackagePlatform} </text>
            <timeStampFormat></timeStampFormat>
        </logMessage>
        <actionGroup>
            <explanation>Win-x64</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>FileExecutable</name>
                    <value>Shure Designer Desktop-x64.exe</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting FileExecutable</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>FileExecutable set to ${FileExecutable}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariable>
                    <name>VCRuntimeExecutable</name>
                    <value>VC_redist.x64.exe</value>
                    <onErrorActionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Error setting VCRuntimeExecutable</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>VCRuntimeExecutable set to ${VCRuntimeExecutable}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </actionList>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${InstallPackagePlatform}</value1>
                    <value2>Win-x64</value2>
                </compareValues>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-common</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>executable</name>
                    <value>Shure Designer Desktop.app</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting executable</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>executable set to ${executable}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
    </preBuildActionList>
    <initializationActionList>
        <actionGroup>
            <explanation>win-x64 checks (disabled intentional)</explanation>
            <run>0</run>
            <actionList>
                <throwError>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <text>Processor needs have at least 4 cores.</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_cpu_count}</value1>
                            <value2>4</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
                <throwError>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <text>Processor needs to be atleast 2Ghz</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_cpu_speed}</value1>
                            <value2>2000</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
                <throwError>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <text>Windows 10 or 11 Profession or Enterprise Versions.</text>
                    <ruleList>
                        <ruleGroup>
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows-11</type>
                                </platformTest>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows-10</type>
                                </platformTest>
                            </ruleList>
                        </ruleGroup>
                        <compareText>
                            <logic>does_not_contain</logic>
                            <text>Professional,Enterprise</text>
                            <value>${windows_os_flavor}</value>
                        </compareText>
                    </ruleList>
                </throwError>
                <throwError>
                    <text>8 Gigbytes are required for Shure Designer.</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_total_memory}</value1>
                            <value2>8192</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
                <showWarning>
                    <text>At least 16GB of RAM is recommended.</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_total_memory}</value1>
                            <value2>16384</value2>
                        </compareValues>
                    </ruleList>
                </showWarning>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-x64</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>win-x64</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>LogFilePath</name>
                    <value>${windows_folder_local_appdata}\Shure\${product_fullname}\Logs\Installer</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting LogFilePath</text>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>LogFilePath set to ${LogFilePath}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <createDirectory>
                    <path>${LogFilePath}</path>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error creating directory ${LogFilePath}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </createDirectory>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Creating directory ${LogFilePath}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Checking for another version of designer app running</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <actionGroup>
                    <explanation>Check if 4.x or 5.x is running</explanation>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <actionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>There is a 4.x or 5.x Designer running</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <showWarning>
                            <text>There appears to be a 4.x or 5.x version Designer click OK to force a close on this version of Designer. Once OK is pressed, any unsaved work will be discarded.</text>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error checking running version</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </showWarning>
                        <kill>
                            <name>Shure Designer.exe</name>
                            <showMessageOnError>0</showMessageOnError>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Problem with killing running process</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                            <ruleList>
                                <processTest>
                                    <logic>is_running</logic>
                                    <name>Shure Designer.exe</name>
                                </processTest>
                            </ruleList>
                        </kill>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Killing 'Shure Designer.exe'</text>
                            <timeStampFormat></timeStampFormat>
                            <ruleList>
                                <processTest>
                                    <logic>is_running</logic>
                                    <name>Shure Designer.exe</name>
                                </processTest>
                            </ruleList>
                        </logMessage>
                    </actionList>
                    <ruleList>
                        <processTest>
                            <logic>is_running</logic>
                            <name>Shure Designer.exe</name>
                        </processTest>
                    </ruleList>
                </actionGroup>
                <while>
                    <explanation>DNG Process Check</explanation>
                    <actionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>There is 6.x Shure Designer running</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <showInfo>
                            <text>Shure Designer Desktop is currently running.
Please exit the application to continue.</text>
                        </showInfo>
                    </actionList>
                    <conditionRuleList>
                        <processTest>
                            <logic>is_running</logic>
                            <name>Shure Designer Desktop.exe</name>
                        </processTest>
                    </conditionRuleList>
                </while>
                <createTimeStamp>
                    <format>%Y%m%d%H%M%S</format>
                    <variable>time</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error creating timestamp</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </createTimeStamp>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>time set to ${time}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariable>
                    <name>logname</name>
                    <value>installer_${time}.log</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error renaming log file</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>logname set to ${logname}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-x64</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac non-architecture checks (disabled intentionally)</explanation>
            <run>0</run>
            <actionList>
                <throwError>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <text>Processor needs have at least 4 cores.</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_cpu_count}</value1>
                            <value2>4</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
                <throwError>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <text>Processor needs to be atleast 2Ghz</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_cpu_speed}</value1>
                            <value2>2000</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
                <throwError>
                    <text>8 Gigbytes are required for Shure Designer.</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_total_memory}</value1>
                            <value2>8192</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
                <showWarning>
                    <text>At least 16GB of RAM is recommended.</text>
                    <ruleList>
                        <compareValues>
                            <logic>less</logic>
                            <value1>${machine_total_memory}</value1>
                            <value2>16384</value2>
                        </compareValues>
                    </ruleList>
                </showWarning>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-common</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>LogFilePath</name>
                    <value>${user_home_directory}/Library/Logs/Shure/${product_fullname}</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting LogFilePath</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>LogFilePath set to ${LogFilePath}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <createDirectory>
                    <path>${LogFilePath}</path>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error creating directory ${LogFilePath}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </createDirectory>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Creating directory ${LogFilePath}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>sudo</exec>
                    <execArgs>-u ${system_username} sysctl -n machdep.cpu.brand_string</execArgs>
                    <name>MacArchitectureTest</name>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error running Mac Architecture test</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Running Mac Architecture test</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariable>
                    <name>MacArchitecture</name>
                    <value>osx-arm64</value>
                    <ruleList>
                        <compareText logic="does_not_contain" text="${MacArchitectureTest}" value="Intel"/>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>MacArchitecture</name>
                    <value>osx-x86_64</value>
                    <ruleList>
                        <compareText logic="contains" text="${MacArchitectureTest}" value="Intel"/>
                    </ruleList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>MacArchitecture set to ${MacArchitecture}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <createTimeStamp>
                    <format>%Y%m%d%H%M%S</format>
                    <variable>time</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error creating time</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </createTimeStamp>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>time set to ${time}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariable>
                    <name>logname</name>
                    <value>installer_${time}.log</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error creating logname variable</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>logname set to ${logname}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Checking if a version of Shure Designer 6.x is running</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <while>
                    <explanation>DNG Process Check</explanation>
                    <actionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Another version of 6.x Shure designer app is running</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <showInfo>
                            <text>Shure Designer Desktop is currently running.
Please exit the application to continue.</text>
                        </showInfo>
                    </actionList>
                    <conditionRuleList>
                        <processTest>
                            <logic>is_running</logic>
                            <name>Shure Designer Desktop</name>
                        </processTest>
                    </conditionRuleList>
                </while>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-x64</explanation>
            <actionList>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Checking if installpackageplatform is set to x64 (mac-x86_64)</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <throwError>
                    <text>the osx-x64 version is required to install on this platform.</text>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${InstallPackagePlatform}</text>
                            <value>Mac-x64</value>
                        </compareText>
                    </ruleList>
                </throwError>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${MacArchitecture}</text>
                    <value>osx-x86_64</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-arm64</explanation>
            <actionList>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Checking if installpackageplatform is set to arm64 (mac-arm64)</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <throwError>
                    <text>the osx-arm64 version is required to install on this platform.</text>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${InstallPackagePlatform}</text>
                            <value>Mac-arm64</value>
                        </compareText>
                    </ruleList>
                </throwError>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${MacArchitecture}</text>
                    <value>osx-arm64</value>
                </compareText>
            </ruleList>
        </actionGroup>
    </initializationActionList>
    <preInstallationActionList>
        <actionGroup>
            <explanation>win-x64</explanation>
            <actionList>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Shure Designer 6</key>
                    <name>DisplayVersion</name>
                    <variable>PreviousVersion</variable>
                </registryGet>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Currently installed version set to ${PreviousVersion}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <actionGroup>
                    <explanation>Version Check</explanation>
                    <actionList>
                        <setInstallerVariable>
                            <name>NewVersion</name>
                            <value>${project.version}</value>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting ${NewVersion}</text>
                                    <timeStampFormat></timeStampFormat>
                                    <ruleList>
                                        <compareText>
                                            <logic>equals</logic>
                                            <text>${MacArchitecture}</text>
                                            <value>osx-x86_64</value>
                                        </compareText>
                                    </ruleList>
                                </logMessage>
                            </onErrorActionList>
                        </setInstallerVariable>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Entered Version Check and NewVersion (Installer Version) set to ${NewVersion}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Checking for downgrade</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <throwError>
                            <text>A newer version of Designer, ${PreviousVersion}, is already installed. Installer will exit.</text>
                            <ruleList>
                                <compareVersions>
                                    <logic>greater</logic>
                                    <version1>${PreviousVersion}</version1>
                                    <version2>${NewVersion}</version2>
                                </compareVersions>
                            </ruleList>
                        </throwError>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Show Question Dialogue for uninstalling previous version</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <showQuestion>
                            <default>yes</default>
                            <text>Would you like to upgrade the previous version to a newer version?</text>
                            <variable>UninstallPreviousVersion</variable>
                            <ruleList>
                                <fileExists>
                                    <path>${windows_folder_local_appdata}\Programs\shure.designer-desktop\${UninstallFilename}</path>
                                </fileExists>
                            </ruleList>
                        </showQuestion>
                        <exit>
                            <exitCode>1</exitCode>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${UninstallPreviousVersion}</text>
                                    <value>no</value>
                                </compareText>
                            </ruleList>
                        </exit>
                        <setInstallerVariable>
                            <name>project.installationType</name>
                            <value>upgrade</value>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting project.InstallationType</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </setInstallerVariable>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>setting project.InstallationType to 'upgrade'</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </actionList>
                    <ruleList>
                        <stringTest>
                            <text>${PreviousVersion}</text>
                            <type>not_empty</type>
                        </stringTest>
                    </ruleList>
                </actionGroup>
                <setInstallerVariable>
                    <name>VCRuntimeExecutable</name>
                    <value>VC_redist.x64.exe</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting ${VCRuntimeExecutable}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>VCRuntimeExecutable set to ${VCRuntimeExecutable}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariable>
                    <name>FileExecutable</name>
                    <value>Shure Designer Desktop-x64.exe</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting ${FileExecutable}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>FileExecutable set to ${FileExecutable}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <unpackFile>
                    <addToUninstaller>0</addToUninstaller>
                    <component>Designer</component>
                    <destination>${system_temp_directory}\</destination>
                    <folder>winx64</folder>
                    <origin>${VCRuntimeExecutable}</origin>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error Unpacking ${VCRuntimeExecutable} to ${system_temp_directory}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </unpackFile>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Unpacking VCRuntimeExecutable to system_temp_directory</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <unpackFile>
                    <addToUninstaller>0</addToUninstaller>
                    <component>Designer</component>
                    <destination>${system_temp_directory}\</destination>
                    <folder>winx64</folder>
                    <origin>${FileExecutable}</origin>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error Unpacking ${FileExecutable} to ${system_temp_directory}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </unpackFile>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Unpacking FileExetuable to system_temp_directory</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>wmic</exec>
                    <execArgs>os get Caption | findstr /r /v "^$" | findstr /r /v "^Caption"
</execArgs>
                    <name>Ver</name>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error running program, and/or setting Version</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Running program to get version, and Ver set to ${Ver}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>wmic</exec>
                    <execArgs>cpu get name | findstr /r /v "^$" | findstr /r /v "^Name"
</execArgs>
                    <name>CPU</name>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error running get CPU, and/or setting ${CPU}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Running program get CPU, and CPU set to ${CPU}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <getFreeDiskSpace>
                    <path>C:\</path>
                    <units>GB</units>
                    <variable>FreeDisk</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error getting free disk space and setting FreeDisk to ${FreeDisk}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </getFreeDiskSpace>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Getting free disk space and FreeDisk set to ${FreeDisk}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>wmic</exec>
                    <execArgs>timezone get StandardName | findstr /r /v "^$" | findstr /r /v "^StandardName"
</execArgs>
                    <name>zone of time</name>
                </setInstallerVariableFromScriptOutput>
                <actionGroup>
                    <explanation>Firewall Setup</explanation>
                    <actionList>
                        <logMessage>
                            <text>Setting up Shure Designer 6 - Device Management firewall for Designer</text>
                        </logMessage>
                        <runProgram>
                            <program>netsh.exe</program>
                            <programArguments>advfirewall firewall add rule name="Shure Designer 6 - Device Management" dir=in action=allow program="${windows_folder_local_appdata}\shuregql-nodejs\Cache\phoenix-server\13.0.5-0\bin\Windows\x86_64\VS2019\Win10\ShureDeviceManager.exe" enable=yes localport=8427 protocol=UDP</programArguments>
                            <onErrorActionList>
                                <exit>
                                    <exitCode>179</exitCode>
                                </exit>
                            </onErrorActionList>
                        </runProgram>
                        <runProgram>
                            <program>netsh.exe</program>
                            <programArguments>advfirewall firewall add rule name="Shure Designer 6 - Device Management" dir=out action=allow program="${windows_folder_local_appdata}\shuregql-nodejs\Cache\phoenix-server\13.0.5-0\bin\Windows\x86_64\VS2019\Win10\ShureDeviceManager.exe" enable=yes localport=8427 protocol=UDP</programArguments>
                            <onErrorActionList>
                                <exit>
                                    <exitCode>179</exitCode>
                                </exit>
                            </onErrorActionList>
                        </runProgram>
                    </actionList>
                </actionGroup>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-x64</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-common</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>LogFilePath</name>
                    <value>${user_home_directory}/Library/Logs/Shure/${product_fullname}</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting LogFilePath</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>LogFilePath set to ${LogFilePath}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>sysctl</exec>
                    <execArgs>-n machdep.cpu.brand_string
</execArgs>
                    <name>CPU</name>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error running get CPU, and/or setting CPU to ${CPU}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Running program get CPU, and CPU set to ${CPU}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <getFreeDiskSpace>
                    <path>/</path>
                    <units>GB</units>
                    <variable>FreeDisk</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error getting free disk space and setting FreeDisk to ${FreeDisk}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </getFreeDiskSpace>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Getting free disk space and FreeDisk set to ${FreeDisk}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>sudo</exec>
                    <execArgs>-u ${system_username} date +'%Z'</execArgs>
                    <name>Timezone</name>
                </setInstallerVariableFromScriptOutput>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>Log input</explanation>
            <actionList>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>System Timezone: ${zone of time}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Installer information:</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>CPU: ${CPU}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>macOS ${osx_version}</text>
                    <timeStampFormat></timeStampFormat>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>${Ver}</text>
                    <timeStampFormat></timeStampFormat>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Free Disk Space: ${FreeDisk} GBs</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>RAM: ${machine_total_memory} MBs</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </actionList>
        </actionGroup>
    </preInstallationActionList>
    <readyToInstallActionList>
        <actionGroup>
            <explanation>win-x64</explanation>
            <actionList>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Checks for 5GB of free disk space</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <throwError>
                    <text>Need at least 5GB of free disk space</text>
                    <ruleList>
                        <checkFreeDiskSpace>
                            <logic>less</logic>
                            <path>${install_dir}</path>
                            <size>5</size>
                            <units>GB</units>
                        </checkFreeDiskSpace>
                    </ruleList>
                </throwError>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\14.0\VC\Runtimes\X64</key>
                    <name>Version</name>
                    <variable>InstalledVCRuntimeVersion</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting InstalledVCRuntimeVersion</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </registryGet>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>InstalledVCRuntimeVersion set to ${InstalledVCRuntimeVersion}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <actionGroup>
                    <explanation>FormatPreviousVersionOfRuntimeVersion</explanation>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\14.0\VC\Runtimes\X64</key>
                            <name>Major</name>
                            <variable>PreviousRuntimeMajor</variable>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting PreviousRuntimeMajor</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </registryGet>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>PreviousRuntimeMajor set to ${PreviousRuntimeMajor}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\14.0\VC\Runtimes\X64</key>
                            <name>Minor</name>
                            <variable>PreviousRuntimeMinor</variable>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting PreviousRuntimeMinor</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </registryGet>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>PreviousRuntimeMinor set to ${PreviousRuntimeMinor}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\14.0\VC\Runtimes\X64</key>
                            <name>Bld</name>
                            <variable>PreviousRuntimeBld</variable>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting PreviousRuntimeBld</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </registryGet>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>PreviousRuntimeBld set to ${PreviousRuntimeBld}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\14.0\VC\Runtimes\X64</key>
                            <name>Rbld</name>
                            <variable>PreviousRuntimeRbld</variable>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting PreviousRuntimeRbld</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </registryGet>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>PreviousRuntimeRbld set to ${PreviousRuntimeRbld}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <setInstallerVariable>
                            <name>InstalledVCRuntimeVersion</name>
                            <value>${PreviousRuntimeMajor}.${PreviousRuntimeMinor}.${PreviousRuntimeBld}.${PreviousRuntimeRbld}</value>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting InstalledVCRuntimeVersion</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </setInstallerVariable>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>InstalledVCRuntimeVersion set to ${InstalledVCRuntimeVersion}</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </actionList>
                    <ruleList>
                        <stringTest>
                            <text>${InstalledVCRuntimeVersion}</text>
                            <type>not_empty</type>
                        </stringTest>
                    </ruleList>
                </actionGroup>
                <getWindowsFileVersionInfo>
                    <path>${system_temp_directory}\${VCRuntimeExecutable}</path>
                    <type>version</type>
                    <variable>VCRuntimeNewVersionNumber</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting VCRuntimeNewVersionNumber</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </getWindowsFileVersionInfo>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>VCRuntimeNewVersionNumber set to ${VCRuntimeNewVersionNumber}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <createTimeStamp>
                    <format>%Y%m%d%h%M%s</format>
                    <variable>timestamp</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting timestamp</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </createTimeStamp>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>timestamp set to ${timestamp}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>${system_temp_directory}\${VCRuntimeExecutable}</exec>
                    <execArgs>/q /install /norestart /log "${installdir}\logs\${VCRuntimeExecutable}-${timestamp}.log"</execArgs>
                    <name>RuntimeExitCode</name>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error running RuntimeExitCode</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                    <ruleList>
                        <stringTest>
                            <text>${InstalledVCRuntimeVersion}</text>
                            <type>empty</type>
                        </stringTest>
                        <compareVersions>
                            <logic>less</logic>
                            <version1>${InstalledVCRuntimeVersion}</version1>
                            <version2>${VCRuntimeNewVersionNumber}</version2>
                        </compareVersions>
                    </ruleList>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Executes RuntimeExitCode if there is no InstalledVCRuntimeVersion, or if the installedVCRuntimeVersion is less than VCRuntimeNewVersionNumber</text>
                    <timeStampFormat></timeStampFormat>
                    <ruleList>
                        <stringTest>
                            <text>${InstalledVCRuntimeVersion}</text>
                            <type>empty</type>
                        </stringTest>
                        <compareVersions>
                            <logic>less</logic>
                            <version1>${InstalledVCRuntimeVersion}</version1>
                            <version2>${VCRuntimeNewVersionNumber}</version2>
                        </compareVersions>
                    </ruleList>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>cmd.exe</exec>
                    <execArgs>/c start "" /wait "${system_temp_directory}\${FileExecutable}" /S &amp; echo %ERRORLEVEL%</execArgs>
                    <name>ExecutableOutput</name>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Executes electron installer and waits until it is done then continues with install builder installer</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <deleteFile>
                    <path>${system_temp_directory}\${FileExecutable}</path>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error deleting FileExecutable from system_temp_directory</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </deleteFile>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Deleting FileExecutable from system_temp_directory</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <deleteFile>
                    <path>${system_temp_directory}\${VCRuntimeExecutable}</path>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error deleting VCRuntimeExecutable from system_temp_directory</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </deleteFile>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Deleting VCRuntimeExecutable from system_temp_directory</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-x64</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-common</explanation>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
    </readyToInstallActionList>
    <postInstallationActionList>
        <actionGroup>
            <explanation>mac-common</explanation>
            <actionList>
                <actionGroup>
                    <explanation>Mac-Firewall</explanation>
                    <actionList>
                        <setInstallerVariable>
                            <name>application</name>
                            <show>0</show>
                            <value>Shure Designer Desktop.app</value>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error setting application</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                            <ruleList>
                                <platformTest>
                                    <type>osx</type>
                                </platformTest>
                            </ruleList>
                        </setInstallerVariable>
                        <logMessage>
                            <text>application set to ${application}</text>
                        </logMessage>
                        <setInstallerVariableFromScriptOutput>
                            <exec>defaults</exec>
                            <execArgs>read /Library/Preferences/com.apple.alf globalstate
</execArgs>
                            <name>EnabledFirewall</name>
                            <onErrorActionList>
                                <logMessage>
                                    <enableTimeStamp>0</enableTimeStamp>
                                    <text>Failed to run defaults read /Library/Preferences/com.apple.alf globalstate
</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </setInstallerVariableFromScriptOutput>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Checking if Firewall is enabled - defaults read /Library/Preferences/com.apple.alf globalstate</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <runProgram>
                            <program>sudo</program>
                            <programArguments>-u ${system_username} /usr/libexec/ApplicationFirewall/socketfilterfw --add "${installdir}/${application}"</programArguments>
                            <onErrorActionList>
                                <logMessage>
                                    <enableTimeStamp>0</enableTimeStamp>
                                    <text>Failed to run sudo -u ${system_username} /usr/libexec/ApplicationFirewall/socketfilterfw --add "${installdir}/${application}"</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <text>${EnabledFirewall}</text>
                                    <value>1</value>
                                </compareText>
                            </ruleList>
                        </runProgram>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Firewall is enabled adding to firewall - running sudo -u ${system_username} /usr/libexec/ApplicationFirewall/socketfilterfw --add "${installdir}/${application}"</text>
                            <timeStampFormat></timeStampFormat>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <text>${EnabledFirewall}</text>
                                    <value>1</value>
                                </compareText>
                            </ruleList>
                        </logMessage>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <explanation>RDF file association</explanation>
                    <actionList>
                        <runProgram>
                            <program>sudo</program>
                            <programArguments>-u ${system_username} defaults write com.apple.LaunchServices LSHandlers -array-add "&lt;dict&gt;&lt;key&gt;LSHandlerContentTag&lt;/key&gt;
&lt;string&gt;rdf&lt;/string&gt;&lt;key&gt;LSHandlerContentTagClass&lt;/key&gt;
&lt;string&gt;public.filename-extension&lt;/string&gt;&lt;key&gt;LSHandlerRoleAll&lt;/key&gt;
&lt;string&gt;com.shure.designer-desktop&lt;/string&gt;&lt;/dict&gt;"
</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister</program>
                            <programArguments>-kill -domain local -domain system -domain user</programArguments>
                        </runProgram>
                    </actionList>
                </actionGroup>
                <changePermissions>
                    <files>${installer_installation_log}</files>
                    <permissions>0644</permissions>
                    <onErrorActionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Error setting log file permissions to 0644</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </changePermissions>
                <runProgram>
                    <program>sudo</program>
                    <programArguments>chown -R ${system_username} /Applications/Shure/Designer/Shure\ Designer\ Desktop.app</programArguments>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
    </postInstallationActionList>
    <postUninstallerCreationActionList>
        <runProgram>
            <breakpoint>1</breakpoint>
            <program>sudo</program>
            <programArguments> chown -R ${system_username} "${user_home_directory}/Library/Logs/Shure" &amp;&amp; chmod -R 0700 "${user_home_directory}/Library/Logs/Shure" </programArguments>
            <onErrorActionList>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Error running sudo  chown -R ${system_username} "${user_home_directory}/Library/Logs/Shure" &amp;&amp; chmod -R 0700 "${user_home_directory}/Library/Logs/Shure" </text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
        </runProgram>
    </postUninstallerCreationActionList>
    <preUninstallationActionList>
        <actionGroup>
            <explanation>win-x64</explanation>
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <actionList>
                <actionGroup>
                    <explanation>win-x64 filter</explanation>
                    <actionList>
                        <showQuestion>
                            <default>yes</default>
                            <text>Would you like to remove Designer related Logs and User Preferences?</text>
                            <variable>UserSpecificFiles</variable>
                        </showQuestion>
                        <deleteFile>
                            <path>${windows_folder_appdata}\shure.designer-desktop\User\settings.json</path>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${UserSpecificFiles}</text>
                                    <value>yes</value>
                                </compareText>
                            </ruleList>
                        </deleteFile>
                        <deleteFile>
                            <path>${windows_folder_appdata}\shure.designer-desktop\system-api\data\logs</path>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${UserSpecificFiles}</text>
                                    <value>yes</value>
                                </compareText>
                            </ruleList>
                        </deleteFile>
                        <deleteFile>
                            <path>${windows_folder_appdata}\shure.designer-desktop\Local Storage\leveldb\MANIFEST-000001</path>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${UserSpecificFiles}</text>
                                    <value>yes</value>
                                </compareText>
                            </ruleList>
                        </deleteFile>
                        <setInstallerVariable>
                            <name>DesktopShortcutName</name>
                            <value>Shure Designer Desktop.lnk</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>ElectronDesktopShortcutName</name>
                            <value>Launch Shure Designer.lnk</value>
                        </setInstallerVariable>
                        <deleteFile>
                            <abortOnError>0</abortOnError>
                            <path>${windows_folder_desktopdirectory}/${DesktopShortcutName}</path>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error deleting installbuilder desktop shorcut</text>
                                </logMessage>
                            </onErrorActionList>
                            <ruleList>
                                <fileExists>
                                    <path>${windows_folder_desktopdirectory}/${DesktopShortcutName}</path>
                                </fileExists>
                            </ruleList>
                        </deleteFile>
                        <deleteFile>
                            <abortOnError>0</abortOnError>
                            <path>${windows_folder_desktopdirectory}/${ElectronDesktopShortcutName}</path>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error deleting electron desktop shorcut</text>
                                </logMessage>
                            </onErrorActionList>
                            <ruleList>
                                <fileExists>
                                    <path>${windows_folder_desktopdirectory}/${ElectronDesktopShortcutName}</path>
                                </fileExists>
                            </ruleList>
                        </deleteFile>
                        <actionGroup>
                            <explanation>Firewall Removal</explanation>
                            <actionList>
                                <runProgram>
                                    <program>netsh.exe</program>
                                    <programArguments>advfirewall firewall delete rule name="Shure Designer 6 - Device Management"</programArguments>
                                </runProgram>
                            </actionList>
                        </actionGroup>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>windows-x64</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-10</type>
                </platformTest>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-common</explanation>
            <actionList>
                <showQuestion>
                    <default>yes</default>
                    <text>Would you like to remove Designer related Logs and User Preferences?</text>
                    <variable>UserSpecificFiles</variable>
                </showQuestion>
                <deleteFile>
                    <path>${user_home_directory}/Library/Application Support/shure.designer-desktop/system-api/data/logs</path>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${UserSpecificFiles}</text>
                            <value>yes</value>
                        </compareText>
                    </ruleList>
                </deleteFile>
                <deleteFile>
                    <path>${user_home_directory}/Library/Application Support/shure.designer-desktop/User/settings.json</path>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${UserSpecificFiles}</text>
                            <value>yes</value>
                        </compareText>
                    </ruleList>
                </deleteFile>
                <deleteFile>
                    <path>${user_home_directory}/Library/Application Support/shure.designer-desktop/Local Storage/leveldb/MANIFEST-000001</path>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${UserSpecificFiles}</text>
                            <value>yes</value>
                        </compareText>
                    </ruleList>
                </deleteFile>
                <setInstallerVariable>
                    <name>DesktopShortcutName</name>
                    <value>Desginer.app</value>
                </setInstallerVariable>
                <deleteFile>
                    <path>${user_home_directory}/Desktop/${DesktopShortcutName}</path>
                    <ruleList>
                        <fileExists>
                            <path>${user_home_directory}/Desktop/${DesktopShortcutName}</path>
                        </fileExists>
                    </ruleList>
                </deleteFile>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
    </preUninstallationActionList>
    <postUninstallationActionList>
        <actionGroup>
            <explanation>win-x64</explanation>
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <actionList>
                <actionGroup>
                    <explanation>win-x64 filter</explanation>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <exec>cmd.exe</exec>
                            <execArgs>/c start "" /wait "${windows_folder_local_appdata}\Programs\shure.designer-desktop\${UninstallFilename}" /S &amp; echo %ERRORLEVEL%</execArgs>
                            <name>ExecutableOutput</name>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error executing electron uninstaller, then once its done it continues with install builder uninstaller</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                            <ruleList>
                                <stringTest>
                                    <text>${PreviousVersion}</text>
                                    <type>not_empty</type>
                                </stringTest>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <createTimeStamp>
                            <format>%Y%m%d%H%M%S</format>
                            <variable>time</variable>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error creating timestamp</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </createTimeStamp>
                        <setInstallerVariable>
                            <name>logname</name>
                            <value>uninstaller_${time}.log</value>
                            <onErrorActionList>
                                <logMessage>
                                    <text>Error renaming log file</text>
                                    <timeStampFormat></timeStampFormat>
                                </logMessage>
                            </onErrorActionList>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>UninstallerLogFilePath</name>
                            <value>${windows_folder_local_appdata}\Shure\${product_fullname}\Logs\Installer</value>
                        </setInstallerVariable>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Uninstallation Completed</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                        <copyFile destination="${UninstallerLogFilePath}/${logname}" origin="${installer_installation_log}">
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${UserSpecificFiles}</text>
                                    <value>no</value>
                                </compareText>
                            </ruleList>
                        </copyFile>
                    </actionList>
                    <ruleList>
                        <platformTest>
                            <type>windows-x64</type>
                        </platformTest>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-10</type>
                </platformTest>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <explanation>mac-common</explanation>
            <actionList>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Firewall removal:</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <setInstallerVariableFromScriptOutput>
                    <exec>sudo</exec>
                    <execArgs>-u ${system_username} /usr/libexec/ApplicationFirewall/socketfilterfw --listapps
</execArgs>
                    <name>FirewallRuleExists</name>
                    <onErrorActionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>FirewallRuleExists failed to run</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>FirewallRuleExists set to ${FirewallRuleExists}</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <runProgram>
                    <program>sudo</program>
                    <programArguments>-u root /usr/libexec/ApplicationFirewall/socketfilterfw --remove "${user_home_directory}/Library/Caches/shuregql-nodejs/phoenix-server/13.0.29-0/bin/OSX/Clang/10.15/ShureDeviceManager" </programArguments>
                    <onErrorActionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Failed to run sudo -u ${system_username} /usr/libexec/ApplicationFirewall/socketfilterfw --remove "${user_home_directory}/Library/Caches/shuregql-nodejs/phoenix-server/13.0.29-0/bin/OSX/Clang/10.15/ShureDeviceManager"</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                    <ruleList>
                        <compareText>
                            <logic>contains</logic>
                            <text>${FireWallRuleExists}</text>
                            <value>${user_home_directory}/Library/Caches/shuregql-nodejs/phoenix-server/13.0.29-0/bin/OSX/Clang/10.15/ShureDeviceManager</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>FirewallRuleExists contains a rule for Designer, removed running sudo -u root /usr/libexec/ApplicationFirewall/socketfilterfw --remove "${user_home_directory}/Library/Caches/shuregql-nodejs/phoenix-server/13.0.29-0/bin/OSX/Clang/10.15/ShureDeviceManager"</text>
                    <timeStampFormat></timeStampFormat>
                    <ruleList>
                        <compareText>
                            <logic>contains</logic>
                            <text>${FireWallRuleExists}</text>
                            <value>${user_home_directory}/Library/Caches/shuregql-nodejs/phoenix-server/13.0.29-0/bin/OSX/Clang/10.15/ShureDeviceManager</value>
                        </compareText>
                    </ruleList>
                </logMessage>
                <changePermissions>
                    <files>${installer_installation_log}</files>
                    <permissions>0644</permissions>
                    <onErrorActionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Error setting log file permissions to 0644</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </changePermissions>
                <createTimeStamp>
                    <format>%Y%m%d%H%M%S</format>
                    <variable>time</variable>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error creating timestamp</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </createTimeStamp>
                <setInstallerVariable>
                    <name>logname</name>
                    <value>uninstaller_${time}.log</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error renaming log file</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>UninstallerLogFilePath</name>
                    <value>${user_home_directory}/Library/Logs/Shure/${product_fullname}</value>
                    <onErrorActionList>
                        <logMessage>
                            <text>Error setting LogFilePath</text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </setInstallerVariable>
                <changePermissions>
                    <files>${user_home_directory}/Library/Logs/Shure/${product_fullname}</files>
                    <permissions>0777</permissions>
                </changePermissions>
                <logMessage>
                    <enableTimeStamp>0</enableTimeStamp>
                    <text>Uninstallation Completed</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
                <copyFile destination="${UninstallerLogFilePath}/${logname}" origin="${installer_installation_log}">
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${UserSpecificFiles}</text>
                            <value>no</value>
                        </compareText>
                    </ruleList>
                </copyFile>
                <runProgram>
                    <abortOnError>0</abortOnError>
                    <breakpoint>1</breakpoint>
                    <program>sudo</program>
                    <programArguments> chown -R ${system_username} "${user_home_directory}/Library/Logs/Shure" &amp;&amp; chmod -R 0700 "${user_home_directory}/Library/Logs/Shure" </programArguments>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <logMessage>
                            <enableTimeStamp>0</enableTimeStamp>
                            <text>Error running sudo  chown -R ${system_username} "${user_home_directory}/Library/Logs/Shure" &amp;&amp; chmod -R 0700 "${user_home_directory}/Library/Logs/Shure" </text>
                            <timeStampFormat></timeStampFormat>
                        </logMessage>
                    </onErrorActionList>
                </runProgram>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </actionGroup>
    </postUninstallationActionList>
    <enableDebugger>1</enableDebugger>
    <enableRollback>0</enableRollback>
    <enableTimestamp>0</enableTimestamp>
    <installationLogFile>${LogFilePath}/${logname}</installationLogFile>
    <logFileTimeStampFormat>[%Y-%m-%dT%H:%M:%S]</logFileTimeStampFormat>
    <osxApplicationBundleIdentifier>com.shure.designer-${InstallPackagePlatform}</osxApplicationBundleIdentifier>
    <osxPlatforms>osx-arm64</osxPlatforms>
    <outputDirectory>${build_project_directory}/output</outputDirectory>
    <productDisplayIcon>${system_temp_directory}/dng-app-icon-64.ico</productDisplayIcon>
    <requireInstallationByRootUser>1</requireInstallationByRootUser>
    <saveRelativePaths>1</saveRelativePaths>
    <signWindowsUninstaller>1</signWindowsUninstaller>
    <vendor>Shure Incorporated</vendor>
    <windowsARPRegistryPrefix>${project.fullName} 6</windowsARPRegistryPrefix>
    <finalPageActionList>
        <setInstallerVariable>
            <name>application</name>
            <show>0</show>
            <value>Shure\ Designer\ Desktop.app</value>
            <onErrorActionList>
                <logMessage>
                    <text>Error setting application</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>application set to ${application}</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </logMessage>
        <setInstallerVariable>
            <name>CreateDesktopShortcut</name>
            <progressText>Create a desktop shortcut</progressText>
            <value>yes</value>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Creating shortcut to desktop</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${CreateDesktopShortcut}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </logMessage>
        <createShortcuts>
            <destination>${windows_folder_desktopdirectory}</destination>
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <text>Error creating shortcut to desktop</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${CreateDesktopShortcut}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
            <shortcutList>
                <shortcut>
                    <comment>Launches ${project.fullName}</comment>
                    <exec></exec>
                    <icon></icon>
                    <name>Launch ${project.fullName}</name>
                    <path></path>
                    <platforms>all</platforms>
                    <runAsAdmin>1</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${executable}</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath></windowsPath>
                </shortcut>
            </shortcutList>
        </createShortcuts>
        <setInstallerVariable>
            <name>AddToStart</name>
            <progressText>Add to start menu</progressText>
            <value>yes</value>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Add to Start Menu</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${AddToStart}</text>
                    <value>yes</value>
                </compareText>
            </ruleList>
        </logMessage>
        <createShortcuts>
            <destination>${windows_folder_common_programs}\Designer</destination>
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <text>Error adding to Start Menu</text>
                    <timeStampFormat></timeStampFormat>
                    <ruleList>
                        <platformTest>
                            <type>windows-x64</type>
                        </platformTest>
                    </ruleList>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${AddToStart}</text>
                    <value>yes</value>
                </compareText>
            </ruleList>
            <shortcutList>
                <shortcut>
                    <comment>Launches ${project.fullName}</comment>
                    <exec></exec>
                    <icon></icon>
                    <name>Launch ${project.fullName}</name>
                    <path></path>
                    <platforms>all</platforms>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${executable}</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath></windowsPath>
                </shortcut>
            </shortcutList>
        </createShortcuts>
        <setInstallerVariable>
            <name>RunExecutable</name>
            <progressText>Start Designer application</progressText>
            <value>yes</value>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Run executable</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${RunExecutable}</text>
                    <value>yes</value>
                </compareText>
            </ruleList>
        </logMessage>
        <runProgram>
            <program>${executable}</program>
            <programArguments></programArguments>
            <progressText>Open Shure Designer Desktop</progressText>
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <show>0</show>
                    <text>Error running executable</text>
                    <timeStampFormat></timeStampFormat>
                    <ruleList>
                        <platformTest>
                            <type>windows-x64</type>
                        </platformTest>
                        <compareText>
                            <logic>equals</logic>
                            <text>${AddToStart}</text>
                            <value>yes</value>
                        </compareText>
                    </ruleList>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${RunExecutable}</text>
                    <value>yes</value>
                </compareText>
            </ruleList>
        </runProgram>
        <setInstallerVariable>
            <name>CreateDesktopShortcut</name>
            <progressText>Create desktop shortcut</progressText>
            <value>yes</value>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Creating Desktop shorcut</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${CreateDesktopShortcut}</text>
                    <value>yes</value>
                </compareText>
            </ruleList>
        </logMessage>
        <createSymLink linkName="${user_home_directory}/Desktop/Designer.app" target="${Installdir}/${executable}">
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <show>0</show>
                    <text>Error creating Desktop shorcut</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${CreateDesktopShortcut}</text>
                    <value>yes</value>
                </compareText>
            </ruleList>
        </createSymLink>
        <setInstallerVariable>
            <name>AddToDock</name>
            <progressText>Add to Dock (Dock will restart)</progressText>
            <value>yes</value>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Adding to Dock</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${AddToDock}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </logMessage>
        <runProgram>
            <program>sudo</program>
            <programArguments>-u ${system_username} defaults write com.apple.dock persistent-apps -array-add '&lt;dict&gt;&lt;key&gt;tile-data&lt;/key&gt;&lt;dict&gt;&lt;key&gt;file-data&lt;/key&gt;&lt;dict&gt;&lt;key&gt;_CFURLString&lt;/key&gt;&lt;string&gt;/Applications/Shure/Designer/Shure Designer Desktop.app&lt;/string&gt;&lt;key&gt;_CFURLStringType&lt;/key&gt;&lt;integer&gt;0&lt;/integer&gt;&lt;/dict&gt;&lt;/dict&gt;&lt;/dict&gt;'</programArguments>
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <show>0</show>
                    <text>Error adding to Dock</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${AddToDock}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </runProgram>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Killing dock</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${AddToDock}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </logMessage>
        <runProgram>
            <program>killall</program>
            <programArguments>Dock</programArguments>
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <show>0</show>
                    <text>Error killing dock</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${AddToDock}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </runProgram>
        <setInstallerVariable>
            <name>RunApplication</name>
            <progressText>Open Designer</progressText>
            <value>yes</value>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </setInstallerVariable>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <show>0</show>
            <text>Running Application</text>
            <timeStampFormat></timeStampFormat>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${RunApplication}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </logMessage>
        <runProgram>
            <program>open</program>
            <programArguments>-a ${platform_install_prefix}/Shure/${project.ShortName}/${application}</programArguments>
            <show>0</show>
            <onErrorActionList>
                <logMessage>
                    <text>Error running application</text>
                    <timeStampFormat></timeStampFormat>
                </logMessage>
            </onErrorActionList>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${RunApplication}</value1>
                    <value2>yes</value2>
                </compareValues>
            </ruleList>
        </runProgram>
    </finalPageActionList>
    <installationAbortedActionList>
        <actionGroup>
            <progressText>creating logfile location on error</progressText>
            <actionList>
                <createTimeStamp>
                    <format>%Y-%m-%d_%H-%M-%S</format>
                    <variable>time</variable>
                </createTimeStamp>
                <setInstallerVariable>
                    <name>logname</name>
                    <value>installer_${time}.log</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>LogFilePath</name>
                    <value>${windows_folder_local_appdata}\${project.vendor}\${product_fullname}\Logs\Installer</value>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>LogFilePath</name>
                    <value>${user_home_directory}/Library/Logs/Shure/${product_fullname}</value>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <createDirectory>
                    <path>${LogFilePath}</path>
                </createDirectory>
                <copyFile>
                    <destination>${project.installationLogFile}</destination>
                    <origin>${installer_installation_log}</origin>
                </copyFile>
            </actionList>
        </actionGroup>
        <actionGroup>
            <explanation>win-x64</explanation>
            <actionList>
                <deleteFile>
                    <path>${system_temp_directory}\${FileExecutable}</path>
                </deleteFile>
                <deleteFile>
                    <path>${system_temp_directory}\${VCRuntimeExecutable}</path>
                    <ruleList>
                        <platformTest>
                            <type>windows-x64</type>
                        </platformTest>
                    </ruleList>
                </deleteFile>
            </actionList>
            <ruleList>
                <platformTest>
                    <type>windows-x64</type>
                </platformTest>
            </ruleList>
        </actionGroup>
        <logMessage>
            <enableTimeStamp>0</enableTimeStamp>
            <text>Installation Aborted.</text>
            <timeStampFormat></timeStampFormat>
        </logMessage>
    </installationAbortedActionList>
    <parameterList>
        <stringParameter>
            <name>FileExecutable</name>
            <description></description>
            <explanation></explanation>
            <value>Shure Designer Desktop-x64.exe</value>
            <default></default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>0</ask>
            <cliOptionShow>0</cliOptionShow>
            <width>40</width>
        </stringParameter>
        <stringParameter>
            <name>InstallPackagePlatform</name>
            <description></description>
            <explanation></explanation>
            <value>windows-x64</value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <ask>0</ask>
            <cliOptionShow>0</cliOptionShow>
            <width>40</width>
        </stringParameter>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/Shure/${project.ShortName}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>0</ask>
            <cliOptionName>prefix</cliOptionName>
            <cliOptionShow>0</cliOptionShow>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
        </directoryParameter>
        <stringParameter>
            <name>UninstallFilename</name>
            <description></description>
            <explanation></explanation>
            <value>Uninstall Shure Designer Desktop.exe</value>
            <default></default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>0</ask>
            <cliOptionShow>0</cliOptionShow>
            <width>40</width>
        </stringParameter>
        <stringParameter>
            <name>executable</name>
            <description></description>
            <explanation></explanation>
            <value>${windows_folder_local_appdata}\Programs\shure.designer-desktop\Shure Designer Desktop.exe</value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <ask>0</ask>
            <width>40</width>
        </stringParameter>
        <labelParameter>
            <name>DiskCheck</name>
            <title>Not enough hard drive space</title>
            <description>Drive free space: ${FreeDisk} GB
Designer install size: 5 GB</description>
            <explanation>Designer needs an additional ${MissingGBs} GB of disc space to install. Please make room on your hard drive and run the installer again.</explanation>
            <image></image>
            <insertAfter>welcome</insertAfter>
            <insertBefore>readytoinstall</insertBefore>
            <postShowPageActionList>
                <exit>
                    <run>0</run>
                </exit>
            </postShowPageActionList>
            <preShowPageActionList>
                <getFreeDiskSpace>
                    <path>${installdir}</path>
                    <units>GB</units>
                    <variable>FreeDisk</variable>
                </getFreeDiskSpace>
                <mathExpression>
                    <text>5 - ${FreeDisk}</text>
                    <variable>MissingGBs</variable>
                </mathExpression>
            </preShowPageActionList>
            <ruleList>
                <checkFreeDiskSpace>
                    <logic>less</logic>
                    <path>/</path>
                    <size>5</size>
                    <units>GB</units>
                </checkFreeDiskSpace>
            </ruleList>
            <validationActionList>
                <throwError>
                    <text>System does not meet the requirement of atleast 5GB to install</text>
                    <ruleList>
                        <compareValues>
                            <logic>greater</logic>
                            <value1>${MissingGBs}</value1>
                            <value2>0</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
            </validationActionList>
        </labelParameter>
    </parameterList>
    <platformOptionsList>
        <platformOptions>
            <platform>osx</platform>
            <uninstallerDirectory>${installdir}</uninstallerDirectory>
        </platformOptions>
        <platformOptions>
            <platform>windows</platform>
        </platformOptions>
    </platformOptionsList>
</project>

